import{_ as t,o as e,c as r,R as n}from"./chunks/framework.d95bcf44.js";const T=JSON.parse('{"title":"HTTP状态码","description":"","frontmatter":{},"headers":[],"relativePath":"studyCn/Network/HTTPStatus.md"}'),l={name:"studyCn/Network/HTTPStatus.md"},d=n('<h1 id="http状态码" tabindex="-1">HTTP状态码 <a class="header-anchor" href="#http状态码" aria-label="Permalink to &quot;HTTP状态码&quot;">​</a></h1><h2 id="http-应答状态码" tabindex="-1">HTTP 应答状态码： <a class="header-anchor" href="#http-应答状态码" aria-label="Permalink to &quot;HTTP 应答状态码：&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">1XX</td><td style="text-align:center;">请求正在被处理</td></tr><tr><td style="text-align:center;">2XX</td><td style="text-align:center;">请求处理成功</td></tr><tr><td style="text-align:center;">3XX</td><td style="text-align:center;">需要进行重定向</td></tr><tr><td style="text-align:center;">4XX</td><td style="text-align:center;">服务器无法处理请求</td></tr><tr><td style="text-align:center;">5XX</td><td style="text-align:center;">服务器处理请求时出错</td></tr></tbody></table><h2 id="http-常见应答状态码" tabindex="-1">HTTP 常见应答状态码 <a class="header-anchor" href="#http-常见应答状态码" aria-label="Permalink to &quot;HTTP 常见应答状态码&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">200</td><td style="text-align:center;">请求正在被处理</td></tr><tr><td style="text-align:center;">204</td><td style="text-align:center;">请求处理成功，但响应体为空，即没有资源返回。一般用于只需从客户端往服务器发送信息。</td></tr><tr><td style="text-align:center;">206</td><td style="text-align:center;">表示客户端进行了范围请求，而服务器成功执行了这部分的 GET 请求，实现断点续传或同时分片下载。响应报文中包含由 Content-Range 指定范围的实体内容。</td></tr><tr><td style="text-align:center;">301</td><td style="text-align:center;">（永久重定向）请求的资源已被永久分配了新的 URI，以后应该永久使用资源现在所指的 URI 进行访问。</td></tr><tr><td style="text-align:center;">302</td><td style="text-align:center;">（临时重定向）请求的资源已被分配了新的 URI，希望用户(本次)能使用新的 URI 访问。</td></tr><tr><td style="text-align:center;">303</td><td style="text-align:center;">303 状态码和 302 状态码有着相同的功能，但 303 状态码明确表示客户端应当采用 GET 方法获取资源.</td></tr><tr><td style="text-align:center;">304</td><td style="text-align:center;">客户端发送附带条件的请求时，服务器端允许请求访问资源，但请求资源未修改，可以使用缓存的资源，不用在服务器取，则返回 304。该相应不包含响应的主体部分（即可直接使用缓存）</td></tr><tr><td style="text-align:center;">400</td><td style="text-align:center;">请求报文中存在语法错误</td></tr><tr><td style="text-align:center;">401</td><td style="text-align:center;">发送的请求需要 HTTP 认证</td></tr><tr><td style="text-align:center;">403</td><td style="text-align:center;">请求的资源禁止被访问。</td></tr><tr><td style="text-align:center;">404</td><td style="text-align:center;">服务器上无法找到请求的资源。</td></tr><tr><td style="text-align:center;">405</td><td style="text-align:center;">客户端请求的方法虽然能被服务器识别，但是服务器禁止使用该方法。</td></tr><tr><td style="text-align:center;">500</td><td style="text-align:center;">服务器内部错误。</td></tr><tr><td style="text-align:center;">503</td><td style="text-align:center;">服务器正忙，处于超负荷或维护状态，无法请求。</td></tr></tbody></table>',5),a=[d];function s(c,i,x,y,g,o){return e(),r("div",null,a)}const _=t(l,[["render",s]]);export{T as __pageData,_ as default};
