import{_ as e,o,c as a,R as t}from"./chunks/framework.d95bcf44.js";const y=JSON.parse('{"title":"VitePress布局(Layout) - VitePress中文文档","description":"VitePress中文文档之布局(Layout)","frontmatter":{"title":"VitePress布局(Layout) - VitePress中文文档","description":"VitePress中文文档之布局(Layout)","tags":["VitePress中文文档,VitePress布局,VitePress Layout"],"head":[["meta",{"name":"keywords","content":"VitePress中文文档,VitePress布局,VitePress Layout"}]]},"headers":[],"relativePath":"vitepressCn/theme-layout.md"}'),s={name:"vitepressCn/theme-layout.md"},c=t(`<h1 id="layout" tabindex="-1">Layout <a class="header-anchor" href="#layout" aria-label="Permalink to &quot;Layout&quot;">​</a></h1><p>你可以通过在页面前言中设置<code>layout</code>选项来选择页面布局。有3个布局选项：<code>doc</code>、<code>page</code>和<code>home</code>。如果没有指定任何东西，那么该页就被视为<code>doc</code>页。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#F07178;">layout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">doc</span></span>
<span class="line"><span style="color:#A6ACCD;">---</span></span></code></pre></div><h2 id="doc-layout" tabindex="-1">Doc Layout <a class="header-anchor" href="#doc-layout" aria-label="Permalink to &quot;Doc Layout&quot;">​</a></h2><p>选项<code>doc</code>是默认的布局，它将整个 Markdown 内容样式化为&quot;文档&quot;外观。它的工作原理是将整个内容包裹在<code>vp-doc</code> css 类中，并对其下的元素应用样式。</p><p>几乎所有的通用元素，如<code>p</code>或<code>h2</code>，都有特殊的样式。因此，请记住，如果你在 Markdown 内容中添加任何自定义的HTML，这些也会受到这些样式的影响。</p><p>它还提供了下面列出的<code>doc</code>特定功能。这些功能只在这个布局中启用。</p><ul><li><a href="/forDocs/vitepressCn/theme-edit-link.html">Edit Link</a></li><li><a href="/forDocs/vitepressCn/theme-pre-next-link.html">Prev Next Link</a></li><li>Outline</li><li><a href="/forDocs/vitepressCn/theme-carbon-ads.html">Carbon Ads</a></li></ul><h2 id="page-layout" tabindex="-1">Page Layout <a class="header-anchor" href="#page-layout" aria-label="Permalink to &quot;Page Layout&quot;">​</a></h2><p>选项<code>Page</code>被当作&quot;blank page&quot;处理。Markdown 仍将被解析，所有的 <a href="/forDocs/vitepressCn/markdown.html">Markdown 扩展</a>与<code>Doc Layout</code>一样工作，但它不会得到任何默认样式。</p><p>Page Layout将让你在不影响 VitePress 主题的情况下自行设计所有样式。当你想创建你自己的自定义页面时，这很有用。</p><p>请注意，即使在这种布局中，如果页面有一个匹配的侧边栏配置，侧边栏仍然会显示出来。</p><h2 id="home-layout" tabindex="-1">Home Layout <a class="header-anchor" href="#home-layout" aria-label="Permalink to &quot;Home Layout&quot;">​</a></h2><p>选项<code>home</code>将生成模板化的<code>Homepage</code>。在这个布局中，你可以设置额外的选项，如<code>hero</code>和<code>features</code>来进一步定制内容。请访问<a href="/forDocs/vitepressCn/theme-home-page.html">主题：首页</a>以了解更多细节。</p>`,14),r=[c];function n(d,l,i,p,h,u){return o(),a("div",null,r)}const _=e(s,[["render",n]]);export{y as __pageData,_ as default};
